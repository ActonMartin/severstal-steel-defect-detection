import pytest
import numpy as np

from sever.data_loader.process import RLE, mask2rle, rle2mask


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_rle_from_str_inverse(s):
    rle = RLE.from_str(s)
    assert str(rle) == s


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_rle_to_mask_inverse(s):
    mask = RLE.from_str(s).to_mask()
    assert str(RLE.from_mask(mask)) == s


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_mask_to_str_01(s):
    mask = rle2mask(s, (1600, 256))

    s1 = str(RLE.from_mask(mask))
    s2 = mask2rle(mask)
    assert s1 == s2


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_mask_to_str_02(s):
    mask = RLE.from_str(s).to_mask()

    s1 = str(RLE.from_mask(mask))
    s2 = mask2rle(mask)
    assert s1 == s2


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_str_to_mask(s):
    rle = RLE.from_str(s)
    m1 = rle.to_mask()
    m2 = rle2mask(s, (1600, 256))
    assert np.allclose(m1, m2)


@pytest.mark.parametrize('s', [
    ('373611 89 373826 185 374041 226 374276 247 374532 248 374788 248 375045 247 375301 247 '
     '375557 247 375813 247 376069 231 376326 200 376582 169 376838 139 377094 108 377398 30'),
    ('52349 132 52605 132 52861 132 53117 132 53373 132 53629 132 53885 132 54141 132 54397 '
     '132 54653 132 54909 132 55134 163 55328 1248 56577 255 56833 255 57089 255 57345 255 57601 '
     '255 57857 255 58113 255 58369 255 58625 255 58881 255 59137 254 59393 254 59681 222 60000 '
     '159 60320 95 60639 32 293678 8 293918 24 294166 32 294422 32 294678 32 294934 32 295189 33 '
     '295445 33 295701 33 295957 33 296213 33 296469 33 296725 33 296980 34 297236 34 297492 34 '
     '297748 34 298004 34 298260 34 298516 34 298772 34 299027 35 299283 35 299539 35 299795 35 '
     '300051 35 300307 35 300563 35 300818 36 301074 36 301330 36 301586 36 301842 33 302098 28 '
     '302354 23 302609 18 302865 13 303121 8 303377 3')
])
def test_mlcomp(s):
    assert s == mask2rle(rle2mask(s, (1600, 256)))
